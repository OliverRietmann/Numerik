x = 3
var = "I am a string."
print(x, "x", var)

l = [1, 2, 3]
print(l[1])

l = [1, "two", 3]
print(l)
for n in l:
  print(n)

n = 3
# Ihr Code kommt hier hin:
# ...
# ...

print(2 + 3)
print(2 * 3)
print(2 / 3)
print(2**3)
print(2^3)

import math

print(math.sqrt(45))
print(math.pow(23, 1 / 5))

def log17(x):
  y = math.log(x) / math.log(17)
  return y

l1 = [1, 2, 3]
l2 = [4, 5, 6]

def sum_lists(v, w):
  return v + w

print(sum_lists(l1, l2))

l = [1, 2, 3]

def skalar_mult(s, v):
  return s * v

print(skalar_mult(3, l))

import numpy as np

l = [1, 2, 3]
x = np.array(l)
y = np.array([4, 5, 6])

print(x + y)
print(3 * x)

import numpy as np

x = np.array([1, 2, 3])
print(np.sqrt(x))

import numpy as np

v = np.array([1, 2, 3])
w = np.array([0, 0, 1])
print(np.dot(v, w))

import numpy as np

A = np.array([[16,  3],
              [ 5, 10],
              [ 9,  6]])

B = np.array([[1, 2, 3],
              [4, 6, 6]])

print(np.dot(A, B))
# Gleich wie A.dot(B) und A @ B
# Probieren Sie mal np.shape(A)

import numpy as np

R = np.random.random((2,3))
print(R)

import numpy as np

v = np.array([1, 2, 3])
print(v[1])

A = np.array([[16,  3],
              [ 5, 10],
              [ 9,  6]])
print(A[1, 2])

import numpy as np

x = np.array([1])
x[0] = x[0] / 2
print(x[0])

import numpy as np

# Ihr Code kommt hier hin.

import numpy as np

x = np.linspace(1, 5, 4)
print(x)

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 2 * np.pi, 100)
y = np.sin(x)

plt.figure()
plt.plot(x, y, color="red")
plt.title("Plot von sin(x)")
plt.xlabel("x")
plt.ylabel("sin(x)")
plt.show()

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 20 ,100)
y1 = np.sin(x) / np.sqrt(x + 1)
y2 = np.sin(x / 2) / np.sqrt(x + 1)
y3 = np.sin(x / 3) / np.sqrt(x + 1)

plt.figure()
plt.xlabel(’x’)
# Ihr Code kommt hier hin
# ...
plt.show()

import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0,2*math.pi,100)
y = np.sin(x)

fig, ax = plt.subplots(2)
fig.suptitle(’Vertically stacked subplots’)
ax[0].plot(x,  y, color=’red’ )
ax[1].plot(x, -y, color=’blue’)
plt.show()
