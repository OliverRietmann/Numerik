import numpy as np

def derivative(g, x0, h):
  return (g(x0 + h) - g(x0)) / h

def f(x):
  return 0.5 * x**2

h_list = [10**(-4), 10**(-6), 10**(-8), 10**(-10), 10**(-12)]
for h in h_list:
  df = derivative(f, 1.0, h)
  print(df)

import numpy as np

n = 4
s = np.sqrt(2.0)
for i in range(27):
  n = 2 * n
  s = np.sqrt(2.0 - 2.0 * np.sqrt(1.0 - 0.25 * s**2))
  pi_approx = 0.5 * n * s
  print(n, "\t", pi_approx)

import numpy as np

n = 4
s = np.sqrt(2.0)
for i in range(27):
  n = 2 * n
  s = np.sqrt(2.0 - 2.0 * np.sqrt(1.0 - 0.25 * s**2))
  pi_approx = 0.5 * n * s
  print(n, "\t", pi_approx)

def float_print(x):
  print("{0:0.20f}".format(x))

float_print(0.1)
float_print((1.0 / 3.0)**3 - 1 / 27)  # Auslöschung
float_print(1.0 + 1e-16)              # Absorbtion

np.finfo(’float’)

n = 3

if n % 2 == 1:
  print(n, "ist gerade")
else:
  print(n, "ist ungerade")

# Zum Beispiel 6 --> 110 oder 26 --> 11010
n = 6

while n > 0:
  if n % 2 == 0:
    print(0)
  else:
    print(1)
  n = n // 2

n = 43602299
s = 0

while n > 0:
  s = s + (n % 10)
  n = n // 10

print(s)
